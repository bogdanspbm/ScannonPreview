630/(4y-5-9+2y)-56=7;new
630/(4y-5-9+2y)=7 + 56;
630/(4y-5-9+2y)=61;sum_operation_mistake
630=61*(4y-5-9+2y);
630/61=(4y-5-9+2y);
10=(4y-5-9+2y);mul_mistake
10=4y-5-9+2y;
24=6y;
5=y;mul_mistake

320(78-5x-2x)/2/8-=370/5;new
320(78-5x-2x)/16-=370/5;
20(78-5x-2x)=370/5;
20/5(78-5x-2x)=370;multiplication_commutativity
4(78-5x-2x)=370;
78-5x-2x=370/4;
78-5x-2x=90;mul_mistake
7x = 12;negative_first_number
x = 2;mul_mistake

32*(15-2d+12d-8)/8/2=440;new
32*(15-2d+12d-8)/16=440;
2*(15-2d+12d-8)=440;
(15-2d+12d-8)=880;multiplication_commutativity
15+14d-8=880;additional_operands_reducing
14d=882;sum_operation_mistake
d = 63;

144(83-4y+6y-8y)/12/6=17*2;new
12(83-4y+6y-8y)/6=17*2;
2(83-4y+6y-8y)=17*2;
(83-4y+6y-8y)=17;
83-4y+6y+8y=17;brackets_open_only_for_first_argument
83+10y=17;
10y=75;negative_first_number
y=7.5;

4(5x+x+120)/24+3x=660/5;new
20(5x+x+120)/24+3x=660;mul_mistake
(5x+x+120)/24+3x=33;mul_mistake
(5x+x+120)+3x=33*24;mul_mistake
9x = 33*24-120;
9x =792-120;
x=74;mul_mistake

84-16a-18a=8a;new
84-34a=8a;
84=42a;
a = 84 / 42;
a = 3;mul_mistake


;
(7(x + 10) - 23) / 4 - 13 = 30;new
(7(x + 10) - 23) / 4 = 16;sum_operation_mistake
7(x + 10) - 23 = 64;
7(x + 10) = 91;sum_operation_mistake
x + 10 = 13;
x = 3;

((0.5a + 4) / 15 * 3 - 12) * 4 + 14 = 14;new
((0.5a + 4) / 15 * 3 - 12) * 4 = 0;
(0.5a + 4) / 15 * 3 - 12 = 0;
(0.5a + 4) / 15 * 3 = 12;
(0.5a + 4) / 15 = 5;mul_mistake
0.5a + 4 = 75;
0.5a = 71;
a = 162;mul_mistake

((2y - 23) / 25 + 2) * 11 - 7= 37;new
((2y - 23) / 25 + 2) * 11 = 44;
(2y - 23) / 25 + 2 = 4;
(2y - 23) / 25 = 2;
2y + 23 = 50;brackets_open_mistake
2y = 73;
y = 36;mul_mistake

((16b - 1) * 7 + 1) / 100 * 30 = 15;new
((16b - 1) * 7 + 1) / 100 = 0.5;
(16b - 1) * 7 + 1 = 50;
(16b - 1) * 7 = 50;sum_operation_mistake
16b - 1 = 7;mul_mistake
16b = 8;
b = 0.5;
;
((17(3c - 5) - 3) / 7 * 16 + 8) / 8 = 5;new
(17(3c - 5) - 3) / 7 * 16 + 8 = 40;
(17(3c - 5) - 3) / 7 * 16 = 32;
(17(3c - 5) - 3) / 7 = 2;
17(3c - 5) - 3 = 16;mul_mistake
17(3c - 5) = 17;
3c - 5 = 1;
3c = -3;sum_operation_mistake
c = -1;

;
((x * 4 - 7) * 2 - 14) / 7 = 4;new
(x * 4 - 7) * 2 - 14 = 28;
(x * 4 - 7) * 2 = 32;sum_operation_mistake
x * 4 + 7 = 16;brackets_open_mistake
x * 4 = 8;sum_operation_mistake
x = 2;

((2a -5) * 8 + 8) / 60 + 13 - 4 = 19;new
((2a -5) * 8 + 8) / 60 + 13 = 15;
((2a -5) * 8 + 8) / 60 = 28;sum_operation_mistake
(2a -5) * 8 + 8 = 0.5;mul_mistake
(2a -5) * 8 = -8;sum_operation_mistake
2a - 5 = 1;mul_mistake
2a = 6;
a = 3;

((y - 6 + 3) * 8 / 6 - 2) * 7 + 15 = 29;new
((y - 6 + 3) * 8 / 6 - 2) * 7 = 14;
(y - 6 + 3) * 8 / 6 - 2 = 2;
(y - 6 + 3) * 8 / 6 = 6;sum_operation_mistake
(y - 6 + 3) * 8 = 36;
y - 6 + 3 = 4;mul_mistake
y - 6 = 1;
y = 7;

(2(a - 3) - 3 + 7) / 13 - 5 + 42 = 39;new
(2(a - 3) - 3 + 7) / 13 - 5 = -3;
(2(a - 3) - 3 + 7) / 13 = 2;
2(a - 3) + 3 + 7 = 26;brackets_open_mistake
2(a - 3) + 3 = 19;
2(a - 3) = 16;
a + 3 = 8;brackets_open_mistake
a = 5;
;
((14(b - 16) - 11) / 3 + 5) / 9 + 2 = 20;new
((14(b - 16) - 11) / 3 + 5) / 9 = 2;
(14(b - 16) - 11) / 3 + 5 = 18;
(14(b - 16) - 11) / 3 = 13;
14(b - 16) - 11 = 39;
14(b - 16) = 28;sum_operation_mistake
b - 16 = 2;
b = 17;sum_operation_mistake

;
;
((sqrt((a*20)-1) + 2994) - 276.1)*0.36=982,164;new
(sqrt((a*20)-1) + 2994) - 276.1=2729.9;
sqrt((a*20)-1) + 2994=3006;
sqrt((a*20)-1)=13;sum_operation_mistake
(a*20)-21=169;
a*20=180;
a = 9;
;
(396-b*4)*3-279=30;new
(396-b*4)*3=315;
396-b*4=105;
b*4=210;sum_operation_mistake
b = 50.25;
;
(100+600%(((c*3 + 7)*20)/10))*56=5600;new
600%(((c*3 + 7)*20)/10)+100=100;
600%(((c*3 + 7)*20)/10)=0;
((c*3 + 7)*20)/10=30;
(c*3 + 7)*20=340;mul_mistake
c*3 + 7=17;
c*3=10;
c = 3.12;mul_mistake
;
;
(sqrt((d*2.5+22.5)*2 + 32.5 + 36.5)+34)*0.2=9.7;new
sqrt((d*2.5+22.5)*2 + 32.5 + 36.5)+34=49;
sqrt((d*2.5+22.5)*2 + 32.5 + 36.5)=15;
(d*2.5+22.5)*2 + 32.5 + 36.5=361;mul_mistake
(d*2.5+22.5)*2 + 32.5=324.5;
(d*2.5+22.5)*2=292;
d*2.5+22.5=145;mul_mistake
d*2.5=122.5;
d = 49;
;
(sqrt((((e-8)*sqrt(4)-763)%7)+(-4)) + 56)%23+51=60;new
(sqrt((((e-8)*sqrt(4)-763)%7)+(-4)) + 56)%23=9;
sqrt((((e-8)*sqrt(4)-763)%7)+(-4)) + 56=55;
sqrt((((e-8)*sqrt(4)-763)%7)+(-4))=0;sum_operation_mistake
(((e-8)*sqrt(4)-763)%7)+(-4)=0;
((e-8)*sqrt(4)-763)%7=4;
(e-8)*sqrt(4)-763=837;
(e-8)*sqrt(4)=1600;
e-8=900;mul_mistake
e = 908;

((f*10+0.9)%12+34-7)*8=360;new
(f*10+0.9)%12+34-7=45;
(f*10+0.9)%12+34=52;
(f*10+0.9)%12=18;
f*10+0.9=58;mul_mistake
f*10=57.1;
f=5.71;
;
(((v+(-49))*100)%200+67-1049)*0.00001=0;new
((v+(-49))*100)%200+67-1049=-981;
((v+(-49))*100)%200+67=68;
((v+(-49))*100)%200=1;
(v+(-49))*100=201;
v+(-49)=50-48;mul_mistake
v=50;sum_operation_mistake

((f*2)/3+43.05)/0.5-5612+0.0123=-3814.02-1607.9677;new
((f*2)/3+43.05)/0.5-5612=-5422;
((f*2)/3+43.05)/0.5=190;
(f*2)/3+43.05=95.5;
(f*2)/3=52;sum_operation_mistake
f*2=156;
f=-78;

((((q*q)/sqrt(q)*2+81)%10+375)*3+678)/3-274=333;new
((((q*q)/sqrt(q)*2+81)%10+375)*3+678)/3=607;
(((q*q)/sqrt(q)*2+81)%10+375)*3+678=1821;
(((q*q)/sqrt(q)*2+81)%10+375)*3=1149;sum_operation_mistake
((q*q)/sqrt(q)*2+81)%10+375=383;
((q*q)/sqrt(q)*2+81)%10=8;
(q*q)/sqrt(q)*2+81=89;mul_mistake
(q*q)/sqrt(q)*2=8;
(q*q)/sqrt(q)=4;
q*q=16;
q=4;

sqrt((((g*0.5+45.05)*23+83)%7+17)*0.1-123+221)+0.9=11;new
sqrt((((g*0.5+45.05)*23+83)%7+17)*0.1-123+221)=10;
(((g*0.5+45.05)*23+83)%7+17)*0.1-123+221=10*10;
(((g*0.5+45.05)*23+83)%7+17)*0.1-123=-121;
(((g*0.5+45.05)*23+83)%7+17)*0.1=2;
((g*0.5+45.05)*23+83)%7+17=20;
((g*0.5+45.05)*23+83)%7=3;
(g*0.5+45.05)*23+83=878;
(g*0.5+45.05)*23=805;sum_operation_mistake
g*0.5+45.05=35;
g*0.5=-0.095-1;sum_operation_mistake
g=-0.01;
;

;
2^(x+1)+2^(x-1)=28;new
2^(x)*(2-2^(-1)+1)=28;
2^(x)*3.5=28;brackets_open_mistake
2^(x)=8;
x=3;
;
;
3*9^y=81;new
3^(1+2y)=3^5;mul_mistake
1+2y=4;
2y=2;
y=1.5;mul_mistake
;
;

3^(x+4)+5^(x+3)*3=5^(x+4)+3^(x+3);new
3^(x+4)-3^(x+3)=5^(x+4)-5^(x+3)*3;
3^(x)*54=5^(x)*250;
0.6^(x)*0.216=1;
0.6^(x+3)=0.6^(0);
x+3=0;
x=-3;
;
;

23(12p-2)+9(p-2)=1;new
23*12p - 23*2 + 9(p-2)=1;
256p - 46 + 9p - 2 = 1;brackets_open_only_for_first_argument
265p = 1 + 2 + 46;
265p = 50;sum_operation_mistake
p = 0.2;mul_mistake

2(x+3) + 6(p-2) + 3(1-2p) = 15;new
2x + 6 + 6p - 12 + 4 - 6p = 15;sum_operation_mistake
2x + 6 - 12 + 4  = 15;
2x = 15 - 4 + 12 - 6;
2x = 17;
x = 8;mul_mistake

13(a+1) + 4(a+x) - 18a = 20 ;new
13 + 13a + 4(a+x) - 18a = 20 ;
13 + 13a + 4a + 4x - 18a = 20 ;
13 + 17a + 4a - 18a = 20 ;
13  + 4a = 20 ;additional_operands_reducing
4a = 8;sum_operation_mistake
a = 8 /4;
a = 2;

5x + 15a - 5(x+3a) - 12 = 50/2;new
5x + 15a - 5x + 15a - 12 = 50/2;
6x + 15a - 5x - 15a - 12 = 25;big_amount_of_transformations
6x - 5x - 12 = 25;
x  - 12 = 25;
x  = 25 + 12;
x = 36;sum_operation_mistake

(q+3)2 - 3(q-1) + 5(2+q) = 13;new
2q + 3 - 3q +3 + 10 + 5q = 13;brackets_open_only_for_first_argument
4q +3 + 3 + 10 = 13;
4q = 13 -3 - 3 - 10;
4q = 3;negative_first_number
q = 1;mul_mistake

(4(t-1) + 15) /2 + t = 2;new
(4(t-1) + 15)  + t = 4;mul_mistake
(4(t-1) + 15)  + t = 4;
4(t-1) + 15 + t = 4;
4t - 1 + 15 + t = 4;brackets_open_only_for_first_argument
5t = 4 - 15 + 1;
5t = 10;negative_first_number
t = 2;

2*(3+4(x-2)) / 4 = 3;new
2*(3+4(x-2))  = 13;mul_mistake
6 + 4(x-2) = 13;brackets_open_only_for_first_argument
4(x-2) = 8;sum_operation_mistake
x-2 = 2;
x = 4;

x-15 + 2(x-3) + 6 + x / 3 = 3;new
3x-45 + 6(x-3) + 18 + x  = 9;
3x-45 + 6x-16 + 18 + x  = 9;mul_mistake
10x -45 -`16 + 18 = 9;
10x = 9 + 45 + 16 - 18;
10x = 55;sum_operation_mistake
x = 5;mul_mistake

k - 6(x+3) + 2(1+3x) = 10;new
k - 6x + 3 + 2 + 6x = 10;brackets_open_only_for_first_argument
k  + 3 + 2 = 10;
k = 10 - 3 - 2 ;
k = 4;sum_operation_mistake
